write.csv(x = val_Option, file = "rankTotal.csv", fileEncoding = enco, quote = F)
tmpDir
dir <- getwd()
dir_db <- "../TeamJoel/DB/"
# setwd("../")
## Var
enco <- "UTF-8"
######
# 경로 자동설정
if (dir != dir_db) {
print("경로 재설정")
setwd(dir_db)
} else {
print("경로 정상")
}
# Data Input
df <- read.csv(file = "rank.csv", header = F, stringsAsFactors = F)
head(df, 5)
colnames(df)
val_Option <- df[1:3, ]
str(val_Option)
colnames(val_Option) # 컬럼 명 일치 하긴 함.
val_Option <- val_Option[, -2]
colnames(val_Option)
# 데이터 중간 저장
tmpDir <- paste(dir_db, "/", "Temp")
write.csv(x = val_Option, file = "rankTotal.csv", fileEncoding = enco, quote = F)
dir <- getwd()
dir_db <- "../TeamJoel/DB/"
# setwd("../")
## Var
enco <- "UTF-8"
######
# 경로 자동설정
if (dir != dir_db) {
print("경로 재설정")
setwd(dir_db)
} else {
print("경로 정상")
}
# Data Input
df <- read.csv(file = "rank.csv", header = F, stringsAsFactors = F)
head(df, 5)
colnames(df)
val_Option <- df[1:3, ]
str(val_Option)
colnames(val_Option) # 컬럼 명 일치 하긴 함.
val_Option <- val_Option[, -2]
colnames(val_Option)
# 데이터 중간 저장
tmpDir <- paste(dir_db, collapse = "/", sep = "Temp")
write.csv(x = val_Option, file = "rankTotal.csv", fileEncoding = enco, quote = F)
tmpDir <- paste(dir_db, collapse = "/", sep = "Temp")
tmpDir
tmpDir
tmpDir
tmpDir
dir <- getwd()
dir_db <- "../TeamJoel/DB/"
# setwd("../")
## Var
enco <- "UTF-8"
######
# 경로 자동설정
if (dir != dir_db) {
print("경로 재설정")
setwd(dir_db)
} else {
print("경로 정상")
}
# Data Input
df <- read.csv(file = "rank.csv", header = F, stringsAsFactors = F)
head(df, 5)
colnames(df)
val_Option <- df[1:3, ]
str(val_Option)
colnames(val_Option) # 컬럼 명 일치 하긴 함.
val_Option <- val_Option[, -2]
colnames(val_Option)
# 데이터 중간 저장
tmpDir <- paste(dir_db, collapse = "/", sep = "Temp")
write.csv(x = val_Option, file = "rankTotal.csv", fileEncoding = enco, quote = F)
tmpDir
dir <- getwd()
dir_db <- "../TeamJoel/DB/"
# setwd("../")
## Var
enco <- "UTF-8"
######
# 경로 자동설정
if (dir != dir_db) {
print("경로 재설정")
setwd(dir_db)
} else {
print("경로 정상")
}
# Data Input
df <- read.csv(file = "rank.csv", header = F, stringsAsFactors = F)
head(df, 5)
colnames(df)
val_Option <- df[1:3, ]
str(val_Option)
colnames(val_Option) # 컬럼 명 일치 하긴 함.
val_Option <- val_Option[, -2]
colnames(val_Option)
# 데이터 중간 저장
tmpDir <- paste(dir_db, collapse = "/", "Temp")
write.csv(x = val_Option, file = "rankTotal.csv", fileEncoding = enco, quote = F)
tmpDir
dir <- getwd()
dir_db <- "../TeamJoel/DB/"
# setwd("../")
## Var
enco <- "UTF-8"
######
# 경로 자동설정
if (dir != dir_db) {
print("경로 재설정")
setwd(dir_db)
} else {
print("경로 정상")
}
# Data Input
df <- read.csv(file = "rank.csv", header = F, stringsAsFactors = F)
head(df, 5)
colnames(df)
val_Option <- df[1:3, ]
str(val_Option)
colnames(val_Option) # 컬럼 명 일치 하긴 함.
val_Option <- val_Option[, -2]
colnames(val_Option)
# 데이터 중간 저장
tmpDir <- paste(dir_db, collapse = "/", "Temp", sep = "")
write.csv(x = val_Option, file = "rankTotal.csv", fileEncoding = enco, quote = F)
tmpDir
dir <- getwd()
dir_db <- "../TeamJoel/DB/"
# setwd("../")
## Var
enco <- "UTF-8"
######
# 경로 자동설정
if (dir != dir_db) {
print("경로 재설정")
setwd(dir_db)
} else {
print("경로 정상")
}
# Data Input
df <- read.csv(file = "rank.csv", header = F, stringsAsFactors = F)
head(df, 5)
colnames(df)
val_Option <- df[1:3, ]
str(val_Option)
colnames(val_Option) # 컬럼 명 일치 하긴 함.
val_Option <- val_Option[, -2]
colnames(val_Option)
# 데이터 중간 저장
tmpDir <- paste(dir_db, collapse = "/", sep = "", "rankTotal.csv")
write.csv(x = val_Option, file = tmpDir, fileEncoding = enco, quote = F)
write.csv(x = val_Option, file = tmpDir, fileEncoding = enco, quote = F)
write.csv(x = val_Option, file = tmpDir, fileEncoding = enco, quote = F)
df <- read.csv("rankTotal.csv")
df <- read.csv("rankTotal.csv")
df
View(x = df)
dir <- getwd()
dir_db <- "../TeamJoel/DB/"
# setwd("../")
## Var
enco <- "UTF-8"
######
# 경로 자동설정
if (dir != dir_db) {
print("경로 재설정")
setwd(dir_db)
} else {
print("경로 정상")
}
# Data Input
df <- read.csv(file = "rank.csv", header = F, stringsAsFactors = F)
head(df, 5)
colnames(df)
val_Option <- df[1:3, ]
str(val_Option)
colnames(val_Option) # 컬럼 명 일치 하긴 함.
val_Option <- val_Option[, -2]
colnames(val_Option)
# 데이터 중간 저장
write.csv(x = val_Option, file = "../DB/rankTotal.csv", fileEncoding = enco, quote = F)
# 중간 데이터 read
df <- read.csv("rankTotal.csv")
dir <- getwd()
dir_db <- "../TeamJoel/DB/"
# setwd("../")
## Var
enco <- "UTF-8"
######
# 경로 자동설정
if (dir != dir_db) {
print("경로 재설정")
setwd(dir_db)
} else {
print("경로 정상")
}
# Data Input
df <- read.csv(file = "rank.csv", header = F, stringsAsFactors = F)
head(df, 5)
colnames(df)
val_Option <- df[1:3, ]
str(val_Option)
colnames(val_Option) # 컬럼 명 일치 하긴 함.
val_Option <- val_Option[, -2]
colnames(val_Option)
# 데이터 중간 저장
write.csv(x = val_Option, file = "../DB/rankTotal.csv", fileEncoding = enco, quote = F)
# 중간 데이터 read
df <- read.csv(file = "rankTotal.csv", header = F, sstringsAsFactors = F)
dir <- getwd()
dir_db <- "../TeamJoel/DB/"
# setwd("../")
## Var
enco <- "UTF-8"
######
# 경로 자동설정
if (dir != dir_db) {
print("경로 재설정")
setwd(dir_db)
} else {
print("경로 정상")
}
# Data Input
df <- read.csv(file = "rank.csv", header = F, stringsAsFactors = F)
head(df, 5)
colnames(df)
val_Option <- df[1:3, ]
str(val_Option)
colnames(val_Option) # 컬럼 명 일치 하긴 함.
val_Option <- val_Option[, -2]
colnames(val_Option)
# 데이터 중간 저장
write.csv(x = val_Option, file = "../DB/rankTotal.csv", fileEncoding = enco, quote = F)
# 중간 데이터 read
df <- read.csv(file = "rankTotal.csv", header = F, stringsAsFactors = F)
dir <- getwd()
dir_db <- "../TeamJoel/DB/"
# setwd("../")
## Var
enco <- "UTF-8"
######
# 경로 자동설정
if (dir != dir_db) {
print("경로 재설정")
setwd(dir_db)
} else {
print("경로 정상")
}
# Data Input
df <- read.csv(file = "rank.csv", header = F, stringsAsFactors = F)
head(df, 5)
colnames(df)
val_Option <- df[1:3, ]
str(val_Option)
colnames(val_Option) # 컬럼 명 일치 하긴 함.
val_Option <- val_Option[, -2]
colnames(val_Option)
# 데이터 중간 저장
write.csv(x = val_Option, file = "../DB/rankTotal.csv", fileEncoding = enco, quote = F)
# 중간 데이터 read
df <- read.csv(file = "rankTotal.csv", header = F, stringsAsFactors = F, encoding = enco)
dir <- getwd()
dir_db <- "../TeamJoel/DB/"
# setwd("../")
## Var
enco <- "UTF-8"
######
# 경로 자동설정
if (dir != dir_db) {
print("경로 재설정")
setwd(dir_db)
} else {
print("경로 정상")
}
# Data Input
df <- read.csv(file = "rank.csv", header = F, stringsAsFactors = F)
head(df, 5)
colnames(df)
val_Option <- df[1:3, ]
str(val_Option)
colnames(val_Option) # 컬럼 명 일치 하긴 함.
val_Option <- val_Option[, -2]
colnames(val_Option)
# 데이터 중간 저장
write.csv(x = val_Option, file = "../DB/rankTotal.csv", fileEncoding = enco, quote = F)
# 중간 데이터 read
df <- read.csv(file = "rankTotal.csv", header = F, stringsAsFactors = F, encoding = enco, quote = F)
dir <- getwd()
dir_db <- "../TeamJoel/DB/"
# setwd("../")
## Var
enco <- "UTF-8"
######
# 경로 자동설정
if (dir != dir_db) {
print("경로 재설정")
setwd(dir_db)
} else {
print("경로 정상")
}
# Data Input
df <- read.csv(file = "rank.csv", header = F, stringsAsFactors = F)
head(df, 5)
colnames(df)
val_Option <- df[1:3, ]
str(val_Option)
colnames(val_Option) # 컬럼 명 일치 하긴 함.
val_Option <- val_Option[, -2]
colnames(val_Option)
# 데이터 중간 저장
write.csv(x = val_Option, file = "../DB/rankTotal.csv", fileEncoding = enco, quote = F)
# 중간 데이터 read
df <- read.csv(file = "rankTotal.csv", header = F, stringsAsFactors = F, encoding = enco)
dir <- getwd()
dir_db <- "../TeamJoel/DB/"
# setwd("../")
## Var
enco <- "UTF-8"
######
# 경로 자동설정
if (dir != dir_db) {
print("경로 재설정")
setwd(dir_db)
} else {
print("경로 정상")
}
# Data Input
df <- read.csv(file = "rank.csv", header = F, stringsAsFactors = F)
head(df, 5)
colnames(df)
val_Option <- df[1:3, ]
str(val_Option)
colnames(val_Option) # 컬럼 명 일치 하긴 함.
val_Option <- val_Option[, -2]
colnames(val_Option)
# 데이터 중간 저장
write.csv(x = val_Option, file = "../DB/rankTotal.csv", fileEncoding = enco, quote = F)
# 중간 데이터 read
df <- read.csv(file = "rankTotal.csv", header = F, stringsAsFactors = F, encoding = "UTF8")
dir <- getwd()
dir_db <- "../TeamJoel/DB/"
# setwd("../")
## Var
enco <- "UTF-8"
######
# 경로 자동설정
if (dir != dir_db) {
print("경로 재설정")
setwd(dir_db)
} else {
print("경로 정상")
}
# Data Input
df <- read.csv(file = "rank.csv", header = F, stringsAsFactors = F)
head(df, 5)
colnames(df)
val_Option <- df[1:3, ]
str(val_Option)
colnames(val_Option) # 컬럼 명 일치 하긴 함.
val_Option <- val_Option[, -2]
colnames(val_Option)
# 데이터 중간 저장
write.csv(x = val_Option, file = "../DB/rankTotal.csv", fileEncoding = enco, quote = F)
# 중간 데이터 read
df <- read.csv(file = "rankTotal.csv", header = F, stringsAsFactors = F, encoding = enco)
dir <- getwd()
dir_db <- "../TeamJoel/DB/"
# setwd("../")
## Var
enco <- "UTF-8"
######
# 경로 자동설정
if (dir != dir_db) {
print("경로 재설정")
setwd(dir_db)
} else {
print("경로 정상")
}
# Data Input
df <- read.csv(file = "rank.csv", header = F, stringsAsFactors = F)
head(df, 5)
colnames(df)
val_Option <- df[1:3, ]
str(val_Option)
colnames(val_Option) # 컬럼 명 일치 하긴 함.
val_Option <- val_Option[, -2]
colnames(val_Option)
# 데이터 중간 저장
write.csv(x = val_Option, file = "../DB/rankTotal.csv", fileEncoding = enco, quote = F)
# 중간 데이터 read
df <- read.csv(file = "rankTotal.csv", header = F, stringsAsFactors = F, encoding = enco)
dir <- getwd()
dir_db <- "../TeamJoel/DB/"
# setwd("../")
## Var
enco <- "UTF-8"
######
# 경로 자동설정
if (dir != dir_db) {
print("경로 재설정")
setwd(dir_db)
} else {
print("경로 정상")
}
# Data Input
df <- read.csv(file = "rank.csv", header = F, stringsAsFactors = F)
head(df, 5)
colnames(df)
val_Option <- df[1:3, ]
str(val_Option)
colnames(val_Option) # 컬럼 명 일치 하긴 함.
val_Option <- val_Option[, -2]
colnames(val_Option)
# 데이터 중간 저장
write.csv(x = val_Option, file = "../DB/rankTotal.csv", quote = F)
# 중간 데이터 read
df <- read.csv(file = "rankTotal.csv", header = F, stringsAsFactors = F, encoding = enco)
df
val_Option
val_Option
val_Option
dir <- getwd()
dir_db <- "../TeamJoel/DB/"
# setwd("../")
## Var
enco <- "UTF-8"
######
# 경로 자동설정
if (dir != dir_db) {
print("경로 재설정")
setwd(dir_db)
} else {
print("경로 정상")
}
# Data Input
df <- read.csv(file = "rank.csv", header = F, stringsAsFactors = F)
head(df, 5)
colnames(df)
val_Option <- df[1:3, ]
str(val_Option)
colnames(val_Option) # 컬럼 명 일치 하긴 함.
val_Option <- val_Option[, -2]
colnames(val_Option)
# 데이터 중간 저장
write.csv(x = val_Option, file = "../DB/rankTotal.csv", quote = F)
# 중간 데이터 read
df <- read.csv(file = "rankTotal.csv", header = F, stringsAsFactors = F, encoding = enco)
df
dir <- getwd()
dir_db <- "../TeamJoel/DB/"
# setwd("../")
## Var
enco <- "UTF-8"
######
# 경로 자동설정
if (dir != dir_db) {
print("경로 재설정")
setwd(dir_db)
} else {
print("경로 정상")
}
# Data Input
df <- read.csv(file = "rank.csv", header = F, stringsAsFactors = F)
head(df, 5)
colnames(df)
val_Option <- df[1:3, ]
str(val_Option)
colnames(val_Option) # 컬럼 명 일치 하긴 함.
val_Option <- val_Option[, -2]
colnames(val_Option)
# 데이터 중간 저장
write.csv(x = val_Option, file = "../DB/rankTotal.csv")
# 중간 데이터 read
df <- read.csv(file = "rankTotal.csv", header = F, stringsAsFactors = F, encoding = enco)
df
dir <- getwd()
dir_db <- "../TeamJoel/DB/"
# setwd("../")
## Var
enco <- "UTF-8"
######
# 경로 자동설정
if (dir != dir_db) {
print("경로 재설정")
setwd(dir_db)
} else {
print("경로 정상")
}
# Data Input
df <- read.csv(file = "rank.csv", header = F, stringsAsFactors = F)
head(df, 5)
colnames(df)
val_Option <- df[1:3, ]
str(val_Option)
colnames(val_Option) # 컬럼 명 일치 하긴 함.
val_Option <- val_Option[, -2]
colnames(val_Option)
# 데이터 중간 저장
write.csv(x = val_Option, file = "../DB/rankTotal.csv", quote = F, fileEncoding = enco)
# 중간 데이터 read
df <- read.csv(file = "rankTotal.csv", header = F, stringsAsFactors = F, encoding = enco)
df
df
