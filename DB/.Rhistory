# 로지스틱 회귀
colnames(df)
library(xlsx)
library(devtools)
library(nnet)
library(base)
source_url('https://gist.githubusercontent.com/fawda123/7471137/raw/466c1474d0a505ff044412703516c34f1a4684a5/nnet_plot_update.r')
dir <- getwd()
dir_db <- "../TeamJoel/DB/"
# setwd("../")
## Var
enco <- "UTF-8"
######
# 경로 자동설정
if (dir != dir_db) {
print("경로 재설정")
setwd(dir_db)
} else {
print("경로 정상")
}
################################################
sample <- read.csv('Sample.csv', header = F)
# sample <- sample[, 2:21]
head(sample)
colnames(sample) <- c('식도락_관광', '쇼핑', '자연경관_감상', '업무수행', '고궁_역사_유적지_방문', '공연_민속_행사_축제_관람_및_참가', '전통문화체험', '놀이공원_테마파크', '유흥_오락', '박물관_전시관 방문', '연수_교육_연구',   '스포츠_활동', '기타', '휴양_휴식', '시티투어버스_이용', '뷰티관광', '드라마_영화_촬영지_방문', '의료관광', '레포츠_활동', '시찰')
sample$사례수 <- c(3358, 5447, 789, 251, 1286, 588, 415, 160, 1046, 205, 135, 121, 106, 285, 252, 96, 336, 233, 484, 133, 741)
for(idx in 1:ncol(sample[, -21])) {
sample[, idx] <- round((sample[, idx] / 100) * sample$사례수, 0)
}
sample
sample$재방문 <- c('No', 'Yes', 'Yes', 'No', 'Yes', 'No', 'No', 'Yes', 'Yes', 'No', 'Yes', 'No', 'No', 'No', 'Yes', 'Yes', 'Yes', 'No', 'Yes', 'No', 'No')
# sample$재방문 <- ifelse(sample$재방문 == 'No', 0, 1)
# sample$평균소비 <- c('$1,000 ↓', '$1,500 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑',
#                  '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,500 ↑', '$1,500 ↑', '$1,000 ↓', '$1,000 ↑', '$1,000 ↑', '$2,000 ↑', '$1,000 ↑')
sample$만족도 <- c('low', 'normal', 'low', 'normal', 'low', 'low', 'normal', 'high', 'high', 'high', 'high', 'normal', 'normal', 'high', 'normal', 'high', 'high', 'normal', 'normal', 'normal', 'normal')
# sample$만족도 <- ifelse(sample$만족도 == 'low', 1, ifelse(sample$만족도 == 'normal', 2, 3))
write.csv(x = sample, file = "proc.csv") # 데이터 파일 출력
unique(sample$만족도)
#softMax
# type.ind <- class.ind(sample$만족도)
# sample <- cbind(sample, type.ind)
#
# ncol(sample)
df <- read.csv("../DB/proc.csv", header = T)
df <- df[-1]
str(df)
df
lastCol <- ncol(df)
idx <- df(1:nrow(df), 0.7*nrow(df))
# 데이터 나누기
tr <- df[idx, ]
te <- df[-idx, ]
# 로지스틱 회귀
colnames(df)
fo <- 재방문 ~ .
model <- glm(formula = fo, data = tr, family = "binomial")
# glm 로지스틱 이기 때문에 바이노미얼
model
tr <- df[idx, ]
te <- df[-idx, ]
te
tr
library(xlsx)
library(devtools)
library(nnet)
library(base)
source_url('https://gist.githubusercontent.com/fawda123/7471137/raw/466c1474d0a505ff044412703516c34f1a4684a5/nnet_plot_update.r')
dir <- getwd()
dir_db <- "../TeamJoel/DB/"
# setwd("../")
## Var
enco <- "UTF-8"
######
# 경로 자동설정
if (dir != dir_db) {
print("경로 재설정")
setwd(dir_db)
} else {
print("경로 정상")
}
################################################
sample <- read.csv('Sample.csv', header = F)
# sample <- sample[, 2:21]
head(sample)
colnames(sample) <- c('식도락_관광', '쇼핑', '자연경관_감상', '업무수행', '고궁_역사_유적지_방문', '공연_민속_행사_축제_관람_및_참가', '전통문화체험', '놀이공원_테마파크', '유흥_오락', '박물관_전시관 방문', '연수_교육_연구',   '스포츠_활동', '기타', '휴양_휴식', '시티투어버스_이용', '뷰티관광', '드라마_영화_촬영지_방문', '의료관광', '레포츠_활동', '시찰')
sample$사례수 <- c(3358, 5447, 789, 251, 1286, 588, 415, 160, 1046, 205, 135, 121, 106, 285, 252, 96, 336, 233, 484, 133, 741)
for(idx in 1:ncol(sample[, -21])) {
sample[, idx] <- round((sample[, idx] / 100) * sample$사례수, 0)
}
sample
sample$재방문 <- c('No', 'Yes', 'Yes', 'No', 'Yes', 'No', 'No', 'Yes', 'Yes', 'No', 'Yes', 'No', 'No', 'No', 'Yes', 'Yes', 'Yes', 'No', 'Yes', 'No', 'No')
# sample$재방문 <- ifelse(sample$재방문 == 'No', 0, 1)
# sample$평균소비 <- c('$1,000 ↓', '$1,500 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑',
#                  '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,500 ↑', '$1,500 ↑', '$1,000 ↓', '$1,000 ↑', '$1,000 ↑', '$2,000 ↑', '$1,000 ↑')
sample$만족도 <- c('low', 'normal', 'low', 'normal', 'low', 'low', 'normal', 'high', 'high', 'high', 'high', 'normal', 'normal', 'high', 'normal', 'high', 'high', 'normal', 'normal', 'normal', 'normal')
# sample$만족도 <- ifelse(sample$만족도 == 'low', 1, ifelse(sample$만족도 == 'normal', 2, 3))
write.csv(x = sample, file = "proc.csv") # 데이터 파일 출력
unique(sample$만족도)
#softMax
# type.ind <- class.ind(sample$만족도)
# sample <- cbind(sample, type.ind)
#
# ncol(sample)
df <- read.csv("../DB/proc.csv", header = T)
str(df)
df
lastCol <- ncol(df)
idx <- df(1:nrow(df), 0.7*nrow(df))
# 데이터 나누기
tr <- df[idx, ]
te <- df[-idx, ]
# 로지스틱 회귀
colnames(df)
fo <- 재방문 ~ .
model <- glm(formula = fo, data = tr, family = "binomial")
# glm 로지스틱 이기 때문에 바이노미얼
model
str(df)
library(xlsx)
library(devtools)
library(nnet)
library(base)
source_url('https://gist.githubusercontent.com/fawda123/7471137/raw/466c1474d0a505ff044412703516c34f1a4684a5/nnet_plot_update.r')
dir <- getwd()
dir_db <- "../TeamJoel/DB/"
# setwd("../")
## Var
enco <- "UTF-8"
######
# 경로 자동설정
if (dir != dir_db) {
print("경로 재설정")
setwd(dir_db)
} else {
print("경로 정상")
}
################################################
sample <- read.csv('Sample.csv', header = F)
# sample <- sample[, 2:21]
head(sample)
colnames(sample) <- c('식도락_관광', '쇼핑', '자연경관_감상', '업무수행', '고궁_역사_유적지_방문', '공연_민속_행사_축제_관람_및_참가', '전통문화체험', '놀이공원_테마파크', '유흥_오락', '박물관_전시관 방문', '연수_교육_연구',   '스포츠_활동', '기타', '휴양_휴식', '시티투어버스_이용', '뷰티관광', '드라마_영화_촬영지_방문', '의료관광', '레포츠_활동', '시찰')
sample$사례수 <- c(3358, 5447, 789, 251, 1286, 588, 415, 160, 1046, 205, 135, 121, 106, 285, 252, 96, 336, 233, 484, 133, 741)
for(idx in 1:ncol(sample[, -21])) {
sample[, idx] <- round((sample[, idx] / 100) * sample$사례수, 0)
}
sample
sample$재방문 <- c('No', 'Yes', 'Yes', 'No', 'Yes', 'No', 'No', 'Yes', 'Yes', 'No', 'Yes', 'No', 'No', 'No', 'Yes', 'Yes', 'Yes', 'No', 'Yes', 'No', 'No')
# sample$재방문 <- ifelse(sample$재방문 == 'No', 0, 1)
# sample$평균소비 <- c('$1,000 ↓', '$1,500 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑',
#                  '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,500 ↑', '$1,500 ↑', '$1,000 ↓', '$1,000 ↑', '$1,000 ↑', '$2,000 ↑', '$1,000 ↑')
sample$만족도 <- c('low', 'normal', 'low', 'normal', 'low', 'low', 'normal', 'high', 'high', 'high', 'high', 'normal', 'normal', 'high', 'normal', 'high', 'high', 'normal', 'normal', 'normal', 'normal')
# sample$만족도 <- ifelse(sample$만족도 == 'low', 1, ifelse(sample$만족도 == 'normal', 2, 3))
write.csv(x = sample, file = "proc.csv") # 데이터 파일 출력
unique(sample$만족도)
#softMax
# type.ind <- class.ind(sample$만족도)
# sample <- cbind(sample, type.ind)
#
# ncol(sample)
df <- read.csv("../DB/proc.csv", header = T)
str(df)
df
lastCol <- ncol(df)
idx <- df(1:nrow(df), 0.7*nrow(df))
# 데이터 나누기
tr <- df[idx, ]
te <- df[-idx, ]
# 로지스틱 회귀
colnames(df)
fo <- 재방문 ~ .
model <- glm(formula = fo, data = tr, family = "binomial")
# glm 로지스틱 이기 때문에 바이노미얼
model
library(xlsx)
library(devtools)
library(nnet)
library(base)
source_url('https://gist.githubusercontent.com/fawda123/7471137/raw/466c1474d0a505ff044412703516c34f1a4684a5/nnet_plot_update.r')
dir <- getwd()
dir_db <- "../TeamJoel/DB/"
# setwd("../")
## Var
enco <- "UTF-8"
######
# 경로 자동설정
if (dir != dir_db) {
print("경로 재설정")
setwd(dir_db)
} else {
print("경로 정상")
}
################################################
sample <- read.csv('Sample.csv', header = F)
# sample <- sample[, 2:21]
head(sample)
colnames(sample) <- c('식도락_관광', '쇼핑', '자연경관_감상', '업무수행', '고궁_역사_유적지_방문', '공연_민속_행사_축제_관람_및_참가', '전통문화체험', '놀이공원_테마파크', '유흥_오락', '박물관_전시관 방문', '연수_교육_연구',   '스포츠_활동', '기타', '휴양_휴식', '시티투어버스_이용', '뷰티관광', '드라마_영화_촬영지_방문', '의료관광', '레포츠_활동', '시찰')
sample$사례수 <- c(3358, 5447, 789, 251, 1286, 588, 415, 160, 1046, 205, 135, 121, 106, 285, 252, 96, 336, 233, 484, 133, 741)
for(idx in 1:ncol(sample[, -21])) {
sample[, idx] <- round((sample[, idx] / 100) * sample$사례수, 0)
}
sample
sample$재방문 <- c('No', 'Yes', 'Yes', 'No', 'Yes', 'No', 'No', 'Yes', 'Yes', 'No', 'Yes', 'No', 'No', 'No', 'Yes', 'Yes', 'Yes', 'No', 'Yes', 'No', 'No')
# sample$재방문 <- ifelse(sample$재방문 == 'No', 0, 1)
# sample$평균소비 <- c('$1,000 ↓', '$1,500 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑',
#                  '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,500 ↑', '$1,500 ↑', '$1,000 ↓', '$1,000 ↑', '$1,000 ↑', '$2,000 ↑', '$1,000 ↑')
sample$만족도 <- c('low', 'normal', 'low', 'normal', 'low', 'low', 'normal', 'high', 'high', 'high', 'high', 'normal', 'normal', 'high', 'normal', 'high', 'high', 'normal', 'normal', 'normal', 'normal')
# sample$만족도 <- ifelse(sample$만족도 == 'low', 1, ifelse(sample$만족도 == 'normal', 2, 3))
# write.csv(x = sample, file = "proc.csv") # 데이터 파일 출력
unique(sample$만족도)
#softMax
# type.ind <- class.ind(sample$만족도)
# sample <- cbind(sample, type.ind)
#
# ncol(sample)
df <- read.csv("../DB/proc.csv", header = T)
str(df)
df
lastCol <- ncol(df)
idx <- df(1:nrow(df), 0.7*nrow(df))
# 데이터 나누기
tr <- df[idx, ]
te <- df[-idx, ]
# 로지스틱 회귀
colnames(df)
fo <- 재방문 ~ .
model <- glm(formula = fo, data = tr, family = "binomial")
# glm 로지스틱 이기 때문에 바이노미얼
model
library(xlsx)
library(devtools)
library(nnet)
library(base)
source_url('https://gist.githubusercontent.com/fawda123/7471137/raw/466c1474d0a505ff044412703516c34f1a4684a5/nnet_plot_update.r')
dir <- getwd()
dir_db <- "../TeamJoel/DB/"
# setwd("../")
## Var
enco <- "UTF-8"
######
# 경로 자동설정
if (dir != dir_db) {
print("경로 재설정")
setwd(dir_db)
} else {
print("경로 정상")
}
################################################
sample <- read.csv('Sample.csv', header = F)
# sample <- sample[, 2:21]
head(sample)
colnames(sample) <- c('식도락_관광', '쇼핑', '자연경관_감상', '업무수행', '고궁_역사_유적지_방문', '공연_민속_행사_축제_관람_및_참가', '전통문화체험', '놀이공원_테마파크', '유흥_오락', '박물관_전시관 방문', '연수_교육_연구',   '스포츠_활동', '기타', '휴양_휴식', '시티투어버스_이용', '뷰티관광', '드라마_영화_촬영지_방문', '의료관광', '레포츠_활동', '시찰')
sample$사례수 <- c(3358, 5447, 789, 251, 1286, 588, 415, 160, 1046, 205, 135, 121, 106, 285, 252, 96, 336, 233, 484, 133, 741)
for(idx in 1:ncol(sample[, -21])) {
sample[, idx] <- round((sample[, idx] / 100) * sample$사례수, 0)
}
sample
sample$재방문 <- c('No', 'Yes', 'Yes', 'No', 'Yes', 'No', 'No', 'Yes', 'Yes', 'No', 'Yes', 'No', 'No', 'No', 'Yes', 'Yes', 'Yes', 'No', 'Yes', 'No', 'No')
# sample$재방문 <- ifelse(sample$재방문 == 'No', 0, 1)
# sample$평균소비 <- c('$1,000 ↓', '$1,500 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,000 ↑',
#                  '$1,000 ↑', '$1,000 ↑', '$1,000 ↑', '$1,500 ↑', '$1,500 ↑', '$1,000 ↓', '$1,000 ↑', '$1,000 ↑', '$2,000 ↑', '$1,000 ↑')
sample$만족도 <- c('low', 'normal', 'low', 'normal', 'low', 'low', 'normal', 'high', 'high', 'high', 'high', 'normal', 'normal', 'high', 'normal', 'high', 'high', 'normal', 'normal', 'normal', 'normal')
# sample$만족도 <- ifelse(sample$만족도 == 'low', 1, ifelse(sample$만족도 == 'normal', 2, 3))
# write.csv(x = sample, file = "proc.csv") # 데이터 파일 출력
unique(sample$만족도)
#softMax
# type.ind <- class.ind(sample$만족도)
# sample <- cbind(sample, type.ind)
#
# ncol(sample)
df <- read.csv("../DB/proc.csv", header = T)
str(df)
df
lastCol <- ncol(df)
idx <- df(1:nrow(df), 0.7*nrow(df))
# 데이터 나누기
tr <- df[idx, ]
te <- df[-idx, ]
# 로지스틱 회귀
colnames(df)
fo <- 재방문 ~ .
model <- glm(formula = fo, data = tr, family = "binomial")
# glm 로지스틱 이기 때문에 바이노미얼
model
# fo <- 재방문 ~ .
model <- glm(formula = fo, data = tr, family = "binomial")
# glm 로지스틱 이기 때문에 바이노미얼
model
df$재방문
df$재방문
df$재방문
df$재방문
fo <- 재방문 ~ .
fo <- 재방문 ~ .
model <- glm(formula = fo, data = tr, family = "binomial")
library(xlsx)
library(devtools)
library(nnet)
library(base)
source_url('https://gist.githubusercontent.com/fawda123/7471137/raw/466c1474d0a505ff044412703516c34f1a4684a5/nnet_plot_update.r')
dir <- getwd()
dir_db <- "../TeamJoel/DB/"
# setwd("../")
## Var
enco <- "UTF-8"
######
# 경로 자동설정
if (dir != dir_db) {
print("경로 재설정")
setwd(dir_db)
} else {
print("경로 정상")
}
################################################
sample <- read.csv('Sample.csv', header = F)
# sample <- sample[, 2:21]
head(sample)
colnames(sample) <- c('식도락_관광', '쇼핑', '자연경관_감상', '업무수행', '고궁_역사_유적지_방문', '공연_민속_행사_축제_관람_및_참가', '전통문화체험', '놀이공원_테마파크', '유흥_오락', '박물관_전시관 방문', '연수_교육_연구',   '스포츠_활동', '기타', '휴양_휴식', '시티투어버스_이용', '뷰티관광', '드라마_영화_촬영지_방문', '의료관광', '레포츠_활동', '시찰')
sample$사례수 <- c(3358, 5447, 789, 251, 1286, 588, 415, 160, 1046, 205, 135, 121, 106, 285, 252, 96, 336, 233, 484, 133, 741)
for(idx in 1:ncol(sample[, -21])) {
sample[, idx] <- round((sample[, idx] / 100) * sample$사례수, 0)
}
sample
sample$재방문 <- c('No', 'Yes', 'Yes', 'No', 'Yes', 'No', 'No', 'Yes', 'Yes', 'No', 'Yes', 'No', 'No', 'No', 'Yes', 'Yes', 'Yes', 'No', 'Yes', 'No', 'No')
sample$만족도 <- c('low', 'normal', 'low', 'normal', 'low', 'low', 'normal', 'high', 'high', 'high', 'high', 'normal', 'normal', 'high', 'normal', 'high', 'high', 'normal', 'normal', 'normal', 'normal')
# sample$만족도 <- ifelse(sample$만족도 == 'low', 1, ifelse(sample$만족도 == 'normal', 2, 3))
# write.csv(x = sample, file = "proc.csv") # 데이터 파일 출력
unique(sample$만족도)
#softMax
# type.ind <- class.ind(sample$만족도)
# sample <- cbind(sample, type.ind)
#
# ncol(sample)
df <- read.csv("../DB/proc.csv", header = T)
str(df)
df
lastCol <- ncol(df)
idx <- df(1:nrow(df), 0.7*nrow(df))
# 데이터 나누기
tr <- df[idx, ]
te <- df[-idx, ]
# 로지스틱 회귀
df$재방문 <- factor(df$재방문, )
colnames(df$재방문)
fo <- 재방문 ~ .
model <- glm(formula = fo, data = tr, family = "binomial")
# glm 로지스틱 이기 때문에 바이노미얼
model
df <- read.csv("../DB/proc.csv", header = T)
d
df
str(df)
df
lastCol <- ncol(df)
idx <- df(1:nrow(df), 0.7*nrow(df))
idx <- df(1:nrow(df), 0.7*nrow(df))
idx <- sample(1:nrow(df), 0.7*nrow(df))
tr <- df[idx, ]
te <- df[-idx, ]
df$재방문 <- factor(df$재방문, )
colnames(df$재방문)
# 로지스틱 회귀
df$재방문 <- factor(df$재방문, )
colnames(df$재방문)
library(xlsx)
library(devtools)
library(nnet)
library(base)
source_url('https://gist.githubusercontent.com/fawda123/7471137/raw/466c1474d0a505ff044412703516c34f1a4684a5/nnet_plot_update.r')
dir <- getwd()
dir_db <- "../TeamJoel/DB/"
# setwd("../")
## Var
enco <- "UTF-8"
######
# 경로 자동설정
if (dir != dir_db) {
print("경로 재설정")
setwd(dir_db)
} else {
print("경로 정상")
}
################################################
sample <- read.csv('Sample.csv', header = F)
# sample <- sample[, 2:21]
head(sample)
colnames(sample) <- c('식도락_관광', '쇼핑', '자연경관_감상', '업무수행', '고궁_역사_유적지_방문', '공연_민속_행사_축제_관람_및_참가', '전통문화체험', '놀이공원_테마파크', '유흥_오락', '박물관_전시관 방문', '연수_교육_연구',   '스포츠_활동', '기타', '휴양_휴식', '시티투어버스_이용', '뷰티관광', '드라마_영화_촬영지_방문', '의료관광', '레포츠_활동', '시찰')
sample$사례수 <- c(3358, 5447, 789, 251, 1286, 588, 415, 160, 1046, 205, 135, 121, 106, 285, 252, 96, 336, 233, 484, 133, 741)
for(idx in 1:ncol(sample[, -21])) {
sample[, idx] <- round((sample[, idx] / 100) * sample$사례수, 0)
}
sample
sample$재방문 <- c('No', 'Yes', 'Yes', 'No', 'Yes', 'No', 'No', 'Yes', 'Yes', 'No', 'Yes', 'No', 'No', 'No', 'Yes', 'Yes', 'Yes', 'No', 'Yes', 'No', 'No')
sample$만족도 <- c('low', 'normal', 'low', 'normal', 'low', 'low', 'normal', 'high', 'high', 'high', 'high', 'normal', 'normal', 'high', 'normal', 'high', 'high', 'normal', 'normal', 'normal', 'normal')
# sample$만족도 <- ifelse(sample$만족도 == 'low', 1, ifelse(sample$만족도 == 'normal', 2, 3))
# write.csv(x = sample, file = "proc.csv") # 데이터 파일 출력
unique(sample$만족도)
#softMax
# type.ind <- class.ind(sample$만족도)
# sample <- cbind(sample, type.ind)
#
# ncol(sample)
df <- read.csv("../DB/proc.csv", header = T)
str(df)
df
lastCol <- ncol(df)
idx <- sample(1:nrow(df), 0.7*nrow(df))
# 데이터 나누기
tr <- df[idx, ]
te <- df[-idx, ]
# 로지스틱 회귀
colnames(df$재방문)
colnames(df)
fo <- 재방문 ~ .
model <- glm(formula = fo, data = tr, family = "binomial")
model
summary(model)
pred <- predict(model, newdata=te, type = "binomial")
pred <- predict(model, newdata=te, type = "reponse")
pred <- predict(model, newdata=te, type = "response")
library(xlsx)
library(devtools)
library(nnet)
library(base)
source_url('https://gist.githubusercontent.com/fawda123/7471137/raw/466c1474d0a505ff044412703516c34f1a4684a5/nnet_plot_update.r')
dir <- getwd()
dir_db <- "../TeamJoel/DB/"
# setwd("../")
## Var
enco <- "UTF-8"
######
# 경로 자동설정
if (dir != dir_db) {
print("경로 재설정")
setwd(dir_db)
} else {
print("경로 정상")
}
################################################
sample <- read.csv('Sample.csv', header = F)
# sample <- sample[, 2:21]
head(sample)
colnames(sample) <- c('식도락_관광', '쇼핑', '자연경관_감상', '업무수행', '고궁_역사_유적지_방문', '공연_민속_행사_축제_관람_및_참가', '전통문화체험', '놀이공원_테마파크', '유흥_오락', '박물관_전시관 방문', '연수_교육_연구',   '스포츠_활동', '기타', '휴양_휴식', '시티투어버스_이용', '뷰티관광', '드라마_영화_촬영지_방문', '의료관광', '레포츠_활동', '시찰')
sample$사례수 <- c(3358, 5447, 789, 251, 1286, 588, 415, 160, 1046, 205, 135, 121, 106, 285, 252, 96, 336, 233, 484, 133, 741)
for(idx in 1:ncol(sample[, -21])) {
sample[, idx] <- round((sample[, idx] / 100) * sample$사례수, 0)
}
sample
sample$재방문 <- c('No', 'Yes', 'Yes', 'No', 'Yes', 'No', 'No', 'Yes', 'Yes', 'No', 'Yes', 'No', 'No', 'No', 'Yes', 'Yes', 'Yes', 'No', 'Yes', 'No', 'No')
sample$만족도 <- c('low', 'normal', 'low', 'normal', 'low', 'low', 'normal', 'high', 'high', 'high', 'high', 'normal', 'normal', 'high', 'normal', 'high', 'high', 'normal', 'normal', 'normal', 'normal')
# sample$만족도 <- ifelse(sample$만족도 == 'low', 1, ifelse(sample$만족도 == 'normal', 2, 3))
# write.csv(x = sample, file = "proc.csv") # 데이터 파일 출력
unique(sample$만족도)
#softMax
# type.ind <- class.ind(sample$만족도)
# sample <- cbind(sample, type.ind)
#
# ncol(sample)
df <- read.csv("../DB/proc.csv", header = T)
str(df)
df
lastCol <- ncol(df)
idx <- sample(1:nrow(df), 0.7*nrow(df))
# 데이터 나누기
tr <- df[idx, ]
te <- df[-idx, ]
# 로지스틱 회귀
colnames(df)
fo <- 재방문 ~ .
model <- glm(formula = fo, data = tr, family = "binomial")
# glm 로지스틱 이기 때문에 바이노미얼
model
summary(model)
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
pred <- predict(model, newdata=te, type = "response")
model
na.omit(model)
summary(model)
pred <- predict(model, newdata=te, type = "response")
model
